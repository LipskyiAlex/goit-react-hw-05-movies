{"version":3,"file":"static/js/622.0714f686.chunk.js","mappings":"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","sources":["components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","pages/MovieDetails.styled.jsx","pages/MovieDetails.js","services/theMoiveApi.js"],"sourcesContent":["import styled from \"@emotion/styled\"\n\nexport const Container = styled.div`\ndisplay: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center; \n  padding: 20px;\n  border: 1px solid #ccc;\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n  background-color: #fff;\n  margin-bottom: 20px;\n  width: 300px;\n  margin: 0 auto; \n`\n\nexport const Poster = styled.img`\n\nwidth: 100%;\n  max-width: 300px;\n  height: auto;\n  border-radius: 10px;\n`\n\nexport const Title = styled.h1`\n\nfont-size: 1.5rem;\nmargin: 10px 0;\n\n`\n\n\nexport const FirstParagraph = styled.p`\nmargin: 10px 0;\n\n`\n\nexport const SecondParagraph = styled.p`\n\nfont-weight: bold;\n  color: #3498db; \n  margin-top: 10px;\n\n`","import {Container,Poster,Title,FirstParagraph,SecondParagraph} from './MovieCard.styled';\n\n\nconst MovieCard = ({posterPath,title,vote_average,overview,genreNames}) => {\n\n\n    return (\n\n        <Container>\n        <Poster src={`https://image.tmdb.org/t/p/w300${posterPath}`} alt={title} width='300'/>\n        <Title>{title}</Title>\n        <p>{vote_average}</p>\n        <h2>Overview</h2>\n        <FirstParagraph>{overview}</FirstParagraph>\n        <h3>Genres</h3>\n         <SecondParagraph>{genreNames}</SecondParagraph>\n         </Container>\n    )\n\n}\n\nexport default MovieCard;","import styled from \"@emotion/styled\";\n\nexport const Title = styled.h3`\n  \ntext-align:center;\npadding: 10px;\nmargin-bottom: 15px;\nfont-size:24px;\n\n`\n\nexport const List = styled.ul`\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center; \n   margin-bottom:15px;\n`\n\nexport const Item = styled.li`\n\nfont-size:20px;\n\n`","import { useState, useEffect } from 'react';\nimport { getMovieById } from '../services/theMoiveApi';\nimport MovieCard from '../components/MovieCard/MovieCard';\nimport {\n  NavLink,\n  useParams,\n  Outlet,\n  useLocation,\n  Link,\n} from 'react-router-dom';\nimport { Title, List, Item } from './MovieDetails.styled';\nconst MovieDetails = () => {\n  const location = useLocation();\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState([]);\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        const movieData = await getMovieById(movieId);\n        const {\n          title = 'No title',\n          vote_average,\n          overview,\n          genres,\n          poster_path,\n        } = movieData;\n        setMovie({ title, vote_average, overview, genres, poster_path });\n      } catch (error) {\n        console.log(error.messsage);\n      }\n    };\n\n    fetchMovie();\n  }, [movieId]);\n\n  const { title, vote_average, overview, genres, poster_path } = movie;\n\n  const genreNames = genres ? genres.map(genre => genre.name).join(' ') : '';\n  const posterPath = poster_path ? poster_path : '';\n\n  return (\n    <>\n      <Link to={backLinkHref}>Back to products</Link>\n      <MovieCard\n        posterPath={posterPath}\n        title={title}\n        vote_average={vote_average}\n        overview={overview}\n        genreNames={genreNames}\n      />\n\n      <Title>Additional informations</Title>\n      <List>\n        <Item>\n          <NavLink to={`/movies/${movieId}/cast`} id={movieId}>\n            Cast\n          </NavLink>\n        </Item>\n        <Item>\n          <NavLink to={`/movies/${movieId}/reviews`} id={movieId}>\n            Reviews\n          </NavLink>\n        </Item>\n      </List>\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\nimport Notiflix from 'notiflix';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = 'ffd1ae05d42dfac2dc67614233fe514e';\n\nexport async function getMovieTrends(currentPage) {\n  try {\n    \n    const { data } = await axios.get(`trending/all/day?api_key=${API_KEY}&page=${currentPage}`);\n\n    return data.results;\n    \n  } catch (error) {\n    return Notiflix.Notify.failure(\n      `${error.message}, please contact the administrator`\n    );\n  }\n}\n\nexport async function getMovieByQuery (query) {\n\n    \n  try {\n\n    const {data} = await axios.get(`search/movie?api_key=${API_KEY}&query=${query}`);\n\n    return data;\n  } catch (error) {\n\n    return Notiflix.Notify.failure(\n      `${error.message}, plese contact the administrator`\n    )\n  }\n}\n\nexport async function getMovieById(id) {\n  try {\n    const { data } = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n    \n    return data;\n  } catch (error) {\n    return Notiflix.Notify.failure(\n      `${error.message}, please contact the administrator`\n    );\n  }\n}\n\nexport async function getCastById(id) {\n  try {\n    const { data } = await axios.get(\n      `movie/${id}/credits?api_key=${API_KEY}`\n    );\n\n    return data;\n  } catch (error) {\n    return Notiflix.Notify.failure(\n      `${error.message}, please contact the administrator`\n    );\n  }\n}\n\n\nexport async function getReviewsById (id) {\n\n    try {\n\n        const {data} = await axios.get(\n            `movie/${id}/reviews?api_key=${API_KEY}`\n        )\n\n        return data;\n    } catch(error) {\n        return Notiflix.Notify.failure(\n            `${error.message}, please contact the administrator`\n          );\n    }\n}\n"],"names":["Container","styled","Poster","Title","FirstParagraph","SecondParagraph","posterPath","title","vote_average","overview","genreNames","src","alt","width","List","Item","location","useLocation","movieId","useParams","useState","movie","setMovie","backLinkHref","state","from","useEffect","fetchMovie","getMovieById","movieData","genres","poster_path","console","log","messsage","map","genre","name","join","to","id","axios","API_KEY","getMovieTrends","currentPage","data","results","Notiflix","message","getMovieByQuery","query","getCastById","getReviewsById"],"sourceRoot":""}