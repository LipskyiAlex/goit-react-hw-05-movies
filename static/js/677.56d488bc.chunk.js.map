{"version":3,"file":"static/js/677.56d488bc.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/Placeholder/Placeholder.styled.jsx","components/Placeholder/Placeholder.jsx","components/Form/Form.jsx","pages/Movies.js","services/theMoiveApi.js"],"sourcesContent":["import styled from \"@emotion/styled\"\n\n\nexport const List = styled.ul`\n\n    display: grid;\n    max-width: calc(100vw - 48px);\n    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n    grid-gap: 16px;\n    margin-top: 0;\n    margin-bottom: 0;\n    padding: 0;\n    list-style: none;\n    margin-left: auto;\n   margin-right: auto;\n\n`\n\nexport const Item = styled.li`\n  \n color:inherit;\n\n transition: transform 0.2s ease;\n\n box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;\n \n :hover {\n\n    transform: scale(1.05);\n    font-weight: 500;\n\n    box-shadow: rgba(0, 0, 0, 0.25) 0px 54px 55px, rgba(0, 0, 0, 0.12) 0px -12px 30px, rgba(0, 0, 0, 0.12) 0px 4px 6px, rgba(0, 0, 0, 0.17) 0px 12px 13px, rgba(0, 0, 0, 0.09) 0px -3px 5px;\n }\n\n`\n\nexport const Title = styled.p`\n\n max-width:200px;\n text-align:center;\n\n\n\n`\n","import { Link, useLocation } from 'react-router-dom';\nimport { List, Item, Title } from './MoviesList.styled';\nimport Placeholder from 'components/Placeholder/Placeholder';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  const uniqueMoves = Array.from(new Set(movies.map(movie => movie.id))).map(\n    id => movies.find(movie => movie.id === id)\n  );\n\n  return (\n    <List>\n      {uniqueMoves.map(({ id, title, name, poster_path }) => (\n        <Item key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            {poster_path ? (\n              <img\n                src={`https://image.tmdb.org/t/p/w200${poster_path}`}\n                alt={title ? title : name}\n                width=\"200\"\n              />\n            ) : (\n              <Placeholder title={`${title} poster`} />\n            )}\n\n            <Title>{title ? title : name}</Title>\n          </Link>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nexport default MoviesList;\n","import styled from \"@emotion/styled\"\n\nexport const Wrapper = styled.div`\n \nwidth:200px;\nheight: 300px;\nbackground-color: #fff;\nfont-style: italic;\ndisplay:flex;\njustify-content:center;\nalign-items:center;\ncolor: grey;\n`","import { Wrapper } from \"./Placeholder.styled\";\n\nconst Placeholder = ({title}) => {\n\n      \n    return (\n\n        <Wrapper>{title} will be added soon...</Wrapper>\n    )\n\n}\n\nexport default Placeholder;","import { Notify } from \"notiflix\";\nimport { useState } from \"react\";\n\nconst Form = ({setSearchParams}) => {\n\n    \n     const [query,setQuery] = useState('');\n\n   const handleChange = e => {\n\n    setQuery(e.target.value);\n\n   }\n\n\n    const handleSubmit = async e => {\n        e.preventDefault();\n    \n        if (query.trim() === '') {\n          return Notify.failure(\"query can't be empty\");\n        }\n    \n        setSearchParams({query});\n       \n      };\n\n    return (\n\n<form onSubmit={handleSubmit}>\n<input value={query} autoFocus onChange={e => handleChange(e)} name=\"text\"/>\n<button type=\"submit\">Search</button>\n</form>\n    )\n}\n\nexport default Form;\n\n","import { useState, useEffect } from 'react';\nimport { Notify } from 'notiflix';\nimport { getMovieByQuery } from '../services/theMoiveApi';\nimport MoviesList from '../components/MoviesList/MoviesList';\nimport Form from '../components/Form/Form.jsx';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [failure, setFailure] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const currentParamsQuery = searchParams.get('query');\n\n    if (!currentParamsQuery) return;\n\n    const fetchedMovies = async () => {\n      try {\n        const fetchedData = await getMovieByQuery(currentParamsQuery);\n        if (fetchedData.length === 0) {\n          Notify.failure(\"We've found nothig by this query\");\n        }\n        setMovies(fetchedData);\n      } catch (error) {\n        setFailure(true);\n        Notify.failure(error.message);\n      }\n    };\n    fetchedMovies();\n  }, [searchParams]);\n\n  return (\n    <>\n      <Form setSearchParams={setSearchParams} />\n      {movies && movies.length > 0 && <MoviesList movies={movies} />}\n         {failure && <strong>Something went wrong, please contact the administrator</strong>}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\nimport Notiflix from 'notiflix';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = 'ffd1ae05d42dfac2dc67614233fe514e';\n\nexport async function getMovieTrends(currentPage) {\n  try {\n    \n    const { data } = await axios.get(`trending/movie/day?api_key=${API_KEY}&page=${currentPage}`);\n  \n  \n    return data.results;\n    \n  } catch (error) {\n    return Notiflix.Notify.failure(\n      `${error.message}, please contact the administrator`\n    );\n  }\n}\n\nexport async function getMovieByQuery (query) {\n\n    \n  try {\n\n    const {data} = await axios.get(`search/movie?api_key=${API_KEY}&query=${query}`);\n\n    return data.results;\n  } catch (error) {\n\n    return Notiflix.Notify.failure(\n      `${error.message}, plese contact the administrator`\n    )\n  }\n}\n\nexport async function getMovieById(id) {\n  try {\n    const { data } = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n    \n    return data;\n  } catch (error) {\n    return Notiflix.Notify.failure(\n      `${error.message}, please contact the administrator`\n    );\n  }\n}\n\nexport async function getCastById(id) {\n  try {\n    const { data } = await axios.get(\n      `movie/${id}/credits?api_key=${API_KEY}`\n    );\n\n    return data;\n  } catch (error) {\n    return Notiflix.Notify.failure(\n      `${error.message}, please contact the administrator`\n    );\n  }\n}\n\n\nexport async function getReviewsById (id) {\n\n    try {\n\n        const {data} = await axios.get(\n            `movie/${id}/reviews?api_key=${API_KEY}`\n        )\n\n        return data;\n    } catch(error) {\n        return Notiflix.Notify.failure(\n            `${error.message}, please contact the administrator`\n          );\n    }\n}\n"],"names":["List","styled","Item","Title","movies","location","useLocation","uniqueMoves","Array","from","Set","map","movie","id","find","title","name","poster_path","to","state","src","alt","width","Placeholder","Wrapper","setSearchParams","useState","query","setQuery","handleSubmit","e","preventDefault","trim","Notify","onSubmit","value","autoFocus","onChange","target","handleChange","type","setMovies","failure","setFailure","useSearchParams","searchParams","useEffect","currentParamsQuery","get","fetchedMovies","getMovieByQuery","fetchedData","length","message","MoviesList","axios","API_KEY","getMovieTrends","currentPage","data","results","Notiflix","getMovieById","getCastById","getReviewsById"],"sourceRoot":""}