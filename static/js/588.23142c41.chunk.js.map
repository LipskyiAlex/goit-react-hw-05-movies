{"version":3,"file":"static/js/588.23142c41.chunk.js","mappings":"kRAGaA,E,QAAQC,EAAAA,GAAH,sH,SCDLC,EAAY,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAEtB,OAEG,SAACH,EAAD,UAAQG,GAKf,E,mBCgDD,EApDa,WACX,OAA4CC,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAAsCF,EAAAA,EAAAA,UAAS,GAA/C,eAAOG,EAAP,KAAoBC,EAApB,KACA,GAAgCJ,EAAAA,EAAAA,WAAS,GAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAyCA,OAvCAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAeC,KAAS,SAAAC,GAExBL,GAKFK,EAAEC,OAAOC,gBAAgBC,cACtBH,EAAEC,OAAOC,gBAAgBE,UAAYC,OAAOC,aAC/C,KAGAZ,GAAe,SAAAa,GAAQ,OAAIA,EAAW,CAAf,GAE1B,GAAE,KAIH,OAFAC,SAASC,iBAAiB,SAAUX,GAE7B,WACLU,SAASE,oBAAoB,SAAUZ,EACxC,CACF,GAAE,CAACH,KAEJE,EAAAA,EAAAA,YAAU,WACR,IAAMc,EAAa,mCAAG,WAAMC,GAAN,uFAElBhB,GAAY,GAFM,UAGQiB,EAAAA,EAAAA,IAAeD,GAHvB,OAGZE,EAHY,OAIlBtB,GAAkB,SAAAuB,GAAQ,wBAAQA,IAAR,OAAqBD,GAArB,IAJR,gDAMlBE,QAAQC,IAAI,KAAMC,SANA,yBAQlBtB,GAAY,GARM,4EAAH,sDAWnBe,EAAclB,EACf,GAAE,CAACA,KAGF,iCACE,SAACL,EAAD,UAAW,oBACX,SAAC+B,EAAA,EAAD,CAAYC,OAAQ7B,MAGzB,C","sources":["components/Title/Title.styled.jsx","components/Title/Title.jsx","pages/Home.js"],"sourcesContent":["import styled from \"@emotion/styled\"\n\n\nexport const Title = styled.h1`\n   margin-bottom: 5px;\n   text-align:center;\n   font-size:40px;\n   margin-bottom: 15px;\n\n`","import {Title} from './Title.styled';\n\nexport const TitleMain = ({children}) => {\n\n     return (\n\n        <Title>{children}</Title>\n    \n     )\n   \n\n}","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { getMovieTrends } from '../services/theMoiveApi';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { TitleMain } from '../components/Title/Title';\nimport throttle from 'lodash.throttle';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [fetching, setFetching] = useState(true);\n\n  useEffect(() => {\n    const handleScroll = throttle(e => {\n\n      if (fetching) {\n        return;\n      } \n  \n      if (\n        e.target.documentElement.scrollHeight -\n          (e.target.documentElement.scrollTop + window.innerHeight) <\n        200\n      ) {\n\n        setCurrentPage(prevPage => prevPage + 1);\n      }\n    }, 1000);\n\n    document.addEventListener('scroll', handleScroll);\n\n    return function () {\n      document.removeEventListener('scroll', handleScroll);\n    };\n  }, [fetching]);\n\n  useEffect(() => {\n    const fetchedMovies = async page => {\n      try {\n        setFetching(true);\n        const fetchedData = await getMovieTrends(page);\n        setTrendingMovies(prevData => [...prevData, ...fetchedData]);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setFetching(false);\n      }\n    };\n    fetchedMovies(currentPage);\n  }, [currentPage]);\n\n  return (\n    <>\n      <TitleMain>Trending today</TitleMain>\n      <MoviesList movies={trendingMovies} />\n    </>\n  );\n};\n\nexport default Home;\n\n\n"],"names":["Title","styled","TitleMain","children","useState","trendingMovies","setTrendingMovies","currentPage","setCurrentPage","fetching","setFetching","useEffect","handleScroll","throttle","e","target","documentElement","scrollHeight","scrollTop","window","innerHeight","prevPage","document","addEventListener","removeEventListener","fetchedMovies","page","getMovieTrends","fetchedData","prevData","console","log","message","MoviesList","movies"],"sourceRoot":""}